[{"id":0,"title":"BMS","language":"CPP","author":"Owais","code":"// new ticket book\n// booking cancelation\n// routes\n// list of booked tickets\n\n// two ticket types\n// standard\n// luxury\n\n// bus has 40 seats total\n// 5 luxury 35 normal\n\n// new ticket book \n// select route\n// select available times\n// name phone seat\n\n// ticket id \n\n// cancelation \n// search by name and id \n\n#include <unistd.h>\n#include <conio.h>\n#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nclass seat {\npublic:\n  int id;\n  int type;\n  int busId;\n  bool isBooked = false;\n  int bookedByCustomerId;\n  seat (int setId, int setType, int setBusId) {\n    id = setId;\n    type = setType;\n    busId = setBusId;\n  }\n\n  void bookSeat (int setBookedBy) {\n    isBooked = true;\n    bookedByCustomerId = setBookedBy;\n  }\n  void cancelSeat (int setBookedBy) {\n    if (setBookedBy == bookedByCustomerId) {\n      return;\n    }\n    isBooked = false;\n  }\n};\n\nclass bus {\npublic:\n\n  int busId;\n  string manufacturer;\n  int noOfEconomySeats;\n  int noOfLuxurySeats;\n  vector <seat> seats;\n\n  bus(int setId, string setManufacturer, int setNoOfEconomySeats = 35, int setNoOfLuxurySeats = 5) {\n    busId = setId;\n    manufacturer = setManufacturer;\n    noOfEconomySeats = setNoOfEconomySeats;\n    noOfLuxurySeats = setNoOfLuxurySeats;\n\n    for ( int i = 0; i < noOfEconomySeats; i++ ) {\n      seat newSeat(i, 1, busId);\n      seats.push_back(newSeat);\n    }\n\n    for ( int i = 0; i < setNoOfLuxurySeats; i++ ) {\n      seat newSeat(i+noOfEconomySeats, 2, busId);\n      seats.push_back(newSeat);\n    }\n\n  }\n\tvoid dispalySeats () {\n\t\tcout << \"\\navailable seats: \\n\\n\";\n\t\tfor ( unsigned long i = 0; i < seats.size(); i++ ) {\n\t\t\tseat seatIterated = seats[i];\n\t\t\tif (seatIterated.isBooked) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (seatIterated.type == 1) {\n\t\t\t\tcout << \"\\nseat no: \" << seatIterated.id << \" seat Type: Economy\";\n\t\t\t} else {\n\t\t\t\tcout << \"\\nseat no: \" << seatIterated.id << \" seat Type: Luxury\";\n\t\t\t}\n\t\t}\n\t}\n  void displayData () {\n    cout << \"busId: \" << busId << \"\\tno Of seats: \" << noOfEconomySeats + noOfLuxurySeats << endl\n    << \"Economy Seats: \" << noOfEconomySeats << \"\\tluxury seats: \" << noOfLuxurySeats << endl;\n  }\n};\n\nclass route {\npublic:\n\tint id;\n\tstring startingPoint;\n\tstring destination;\n\n\troute (int setId, string setStartingPoint, string setDestination) {\n\t\tid = setId;\n\t\tstartingPoint = setStartingPoint;\n\t\tdestination = setDestination;\n\t}\n\n\tvoid displayData() {\n\t\tcout << \"route starting point: \" << startingPoint << \" destination: \" << destination << \"\\tId: \" << id << endl;\n\t}\n\n};\n\n\nclass ticket {\npublic:\n\tint id;\n\tint userId;\n\tint tripId;\n\tint seatId;\n\n\tticket (int setId, int setUserId, int setTripId, int setSeatId) {\n\t\tid = setId;\n\t\tuserId = setUserId;\n\t\ttripId = setTripId;\n\t\tseatId = setSeatId;\n\t}\n};\n\nclass trip {\npublic:\n\tint id;\n\tint busId;\n\tint routeId;\n\n\tstring startingTime;\n\tstring endingTime;\n\n\ttrip (int setId, int setBusId, int setRouteId) {\n\t\tid = setId;\n\t\tbusId = setBusId;\n\t\trouteId = setRouteId;\n\t}\n\t\n\tvoid displayData() {\n\t\tcout << \"trip starting time: \" << startingTime << \" ending Time: \" << endingTime << \" busId: \" << busId << \" routeId: \" << routeId << \"\\tId: \" << id << endl;\n\t}\n};\n\nclass customer {\nprivate:\n  string password;\n  // string name;\n\n\tbool getOldPassword ( ) {\n\t\tstring enteredOldPassword = \"\";\n\n\t\tcout << \"enter old password\\n\";\n\t\tcin >> enteredOldPassword;\n\n\t\tif (enteredOldPassword != password) {\n\t\t  cout << \"incorrect password\\n\";\n\t\t  return false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tbool setNewPasswords ( ) {\n\n\t\tstring newPassword1 = \"\";\n\t    string newPassword2 = \"\";\n\n\t    system(\"cls\");\n\n\t    cout << \"Enter new password\\n\";\n\t    cin >> newPassword1;\n\n\t    system(\"cls\");\n\n\t    cout << \"Enter new password again\\n\";\n\t    cin >> newPassword2;\n\n\t    if (newPassword1 != newPassword2) {\n\t      cout << \"passwords do not match\";\n\t      return false;\n\t    }\n\t    password = newPassword1;\n\t    return true;\n\t}\n\npublic:\n  int id;\n  string name;\n  customer (int setId, string setPassword, string setName) {\n    id = setId;\n    password = setPassword;\n    name = setName;\n  }\n\n  string getPassword() {\n    return password;\n  }\n\n  void changePassword () {\n    while(!getOldPassword()) {\n      char ans;\n      cout << \"\\ndo you want to retry? (y/n)\";\n      cin >> ans;\n      if (int(ans) != 89 && int(ans) != 121) {\n        return;\n      }\n    }\n    while(!setNewPasswords()) {\n      char ans;\n      cout << \"\\ndo you want to retry? (y/n)\";\n      cin >> ans;\n      if (int(ans) != 89 && int(ans) != 121) {\n        return;\n      }\n    }\n    cout << \"password changed successfully!\\n\";\n\n  }\n  void displayData ( ) {\n\tcout << \"Customer Name: \" << name << \"\\tId: \" << id << endl;\n  }\n\n};\n\nvector<customer> customers;\nvector<bus> busses;\nvector<route> routes;\nvector<trip> trips;\nvector<ticket> tickets;\n\nint searchCustomers () {\n\tsystem(\"cls\");\n\tstring name;\n\n\tvector<customer> matchedCustomers;\n\n\tcout << \"\\nenter the name\";\n\tcin >> name;\n\n\tfor ( unsigned long i = 0; i < customers.size(); i++ ) {\n\t\tcustomer iteratedCustomer = customers[i];\n\n\t\tfor ( int nameIterator = 0; nameIterator < name.size(); nameIterator++ ) {\n\t\t\tif ( name[0] != iteratedCustomer.name[nameIterator] ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tbool isAMatch = true;\n\t\t\tfor ( int matchedLetterNameIterator = 0; matchedLetterNameIterator < name.size() && matchedLetterNameIterator < iteratedCustomer.name.size(); matchedLetterNameIterator++ ) {\n\t\t\t\t\n\t\t\t\tif ( name[matchedLetterNameIterator] != iteratedCustomer.name[nameIterator + matchedLetterNameIterator] ) {\n\t\t\t\t\tisAMatch = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( isAMatch ) {\n\t\t\t\tmatchedCustomers.push_back(iteratedCustomer);\n\t\t\t}\n\t\t}\n\t\tfor ( unsigned long i = 0; i < matchedCustomers.size(); i++ ) {\n\t\t\tmatchedCustomers[i].displayData();\n\t\t}\n\t}\n\n\tint selectedId;\n\tcout << \"\\n\\n\\n\\n select an id: \";\n\tcin >> selectedId;\n\treturn selectedId;\n}\n\nvoid makeNewCustomer () {\n\tstring password = \"\";\n\tstring confirmPassword = \"\";\n\tstring name = \"\";\n\n\tsystem(\"cls\");\n\n\tcout << \"Making New Customer\\n\";\n\tcout << \"enter Your Name: \";\n\tcin >> name;\n\n\tsystem(\"cls\");\n\n\twhile (true) {\n\t\tsystem(\"cls\");\n\t\tcout << \"\\nenter Your password: \";\n\t\tcin >> password;\n\t\tcout << \"\\nenter Your password again: \";\n\t\tcin >> confirmPassword;\n\t\tif (password != confirmPassword) {\n\t\t  cout << \"\\npasswords do not match\";\n\t\t  sleep(1);\n\t\t  continue;\n\t\t}\n\t\tbreak;\n\t}\n\n\tcustomer newCustomer(customers.size(), password, name);\n\tcustomers.push_back(newCustomer);\n\tsystem(\"cls\");\n\tnewCustomer.displayData();\n\n  return;\n}\n\nvoid makeNewRoute () {\n\tstring origin = \"\";\n\tstring destination = \"\";\n\n\tsystem(\"cls\");\n\tcout << \"Making New Route\\n\";\n\tcout << \"enter the origin: \";\n\tcin >> origin;\n\n\tsystem(\"cls\");\n\tcout << \"Making New Route\\n\";\n\tcout << \"\\nenter the destination: \";\n\tcin >> destination;\n\n\troute newRoute(routes.size(), origin, destination);\n\troutes.push_back(newRoute);\n\tsystem(\"cls\");\n\tnewRoute.displayData();\n\n  return;\n}\n\nvoid makeNewTrip () {\n\tint busId;\n\tint routeId;\n\tstring startingTime;\n\tstring endingTime;\n\n\tsystem(\"cls\");\n\tcout << \"Making New Trip\\n\";\n\tcout << \"enter the Bus Id: \";\n\tcin >> busId;\n\n\tsystem(\"cls\");\n\tcout << \"Making New Trip\\n\";\n\tcout << \"enter the Route Id: \";\n\tcin >> routeId;\n\n\tsystem(\"cls\");\n\tcout << \"Making New Trip\\n\";\n\tcout << \"enter the Starting Time: \";\n\tcin >> startingTime;\n\n\tsystem(\"cls\");\n\tcout << \"Making New Trip\\n\";\n\tcout << \"enter the Ending Time: \";\n\tcin >> endingTime;\n\n\ttrip newTrip(trips.size(), busId, routeId);\n\n\tnewTrip.startingTime = startingTime;\n\tnewTrip.endingTime = endingTime;\n\n\ttrips.push_back(newTrip);\n\tsystem(\"cls\");\n\tnewTrip.displayData();\n\n\treturn;\n}\n\nvoid makeNewBus () {\n\tstring manufacturer;\n\n\tsystem(\"cls\");\n\tcout << \"Making New Bus\\n\";\n\tcout << \"enter the Manufacturer: \";\n\tcin >> manufacturer;\n\n\tbus newBus(busses.size(), manufacturer);\n\tbusses.push_back(newBus);\n\tsystem(\"cls\");\n\tnewBus.displayData();\n\n  return;\n}\n\nvoid displayAllUsers ( ) {\n\tfor (unsigned long i = 0; i < customers.size(); i++) {\n\t\tcustomers[i].displayData();\n\t}\n\tgetch();\n}\n\nvoid displayAllRoutes ( ) {\n\tfor (unsigned long i = 0; i < routes.size(); i++) {\n\t\troutes[i].displayData();\n\t}\n\tgetch();\n}\n\nvoid displayAllTrips ( ) {\n\tfor (unsigned long i = 0; i < trips.size(); i++) {\n\t\ttrips[i].displayData();\n\t}\n\tgetch();\n}\n\nvoid displayAllBusses ( ) {\n\tfor (unsigned long i = 0; i < busses.size(); i++) {\n\t\tbusses[i].displayData();\n\t}\n\tgetch();\n}\n\nvoid displayTicketInfo () {\n    int ticketId;\n\tcout << \"enter your ticket Id: \";\n\tcin >> ticketId;\n\n\tticket fountTicket = tickets[ticketId];\n\tcustomer fountTicketCustomer = customers[fountTicket.userId];\n\ttrip foundTicketTrip = trips[fountTicket.tripId];\n\tbus foundTicketBus = busses[foundTicketTrip.busId];\n\tseat foundTicketSeat = foundTicketBus.seats[fountTicket.seatId];\n\tsystem(\"cls\");\n\tcout << \"ticket for \" << fountTicketCustomer.name << \"\\ntrip starting time: \" << foundTicketTrip.startingTime << \"\\ntrip ending time: \" << foundTicketTrip.endingTime << endl << endl;\n\tcout << \"bus id \" << foundTicketBus.busId << \"\\nseat no: \" << foundTicketSeat.id << endl << endl;\n\tgetch();\n}\n\nvoid displayTicketInfo (int ticketId) {\n\tticket fountTicket = tickets[ticketId];\n\tcustomer fountTicketCustomer = customers[fountTicket.userId];\n\ttrip foundTicketTrip = trips[fountTicket.tripId];\n\tbus foundTicketBus = busses[foundTicketTrip.busId];\n\tseat foundTicketSeat = foundTicketBus.seats[fountTicket.seatId];\n\tsystem(\"cls\");\n\tcout << \"ticket for \" << fountTicketCustomer.name << \"\\ntrip starting time: \" << foundTicketTrip.startingTime << \"\\ntrip ending time: \" << foundTicketTrip.endingTime << endl << endl;\n\tcout << \"bus id \" << foundTicketBus.busId << \"\\nseat no: \" << foundTicketSeat.id << endl << endl;\n\tgetch();\n}\n\nvoid makeNewTicket () {\n\tint tripId;\n\tdisplayAllUsers();\n\tint userId = searchCustomers();\n\tsystem(\"cls\");\n\n\tdisplayAllTrips();\n\tcout << \"\\nSelect a trip Id: \";\n\tcin >> tripId;\n\n\ttrip selectedTrip = trips[tripId];\n\tbus selectedBus = busses[selectedTrip.busId];\n\n\tsystem(\"cls\");\n\n\tint selectedSeatId;\n\n\tselectedBus.dispalySeats();\n\tcin >> selectedSeatId;\n\n\tticket newTicket(tickets.size(), userId, tripId, selectedSeatId);\n\ttickets.push_back(newTicket);\n\tsystem(\"cls\");\n\tdisplayTicketInfo(newTicket.id);\n\n}\n\nvoid cancelTicket () {\n\tint ticketId;\n\tcout << \"enter your ticket Id: \";\n\tcin >> ticketId;\n\n    for (auto i = 0; i < tickets.size(); i++) {\n        ticket iteratiedTicket = tickets[i];\n        if (iteratiedTicket.id != ticketId) {\n            continue;\n        }\n\n        tickets.erase(tickets.begin() + i);\n        int userIdForSelectedTicket = iteratiedTicket.userId;\n        int tripIdForSelectedTicket = iteratiedTicket.tripId;\n        int seatIdForSelectedTicket = iteratiedTicket.seatId;\n\n        for ( unsigned int tripsIterator = 0; tripsIterator < trips.size(); tripsIterator++ ) {\n            trip selectedTicketTrip = trips[tripsIterator];\n            int busIdForSelectedTicket = selectedTicketTrip.busId;\n\n            if (selectedTicketTrip.id != tripIdForSelectedTicket) {\n                continue;\n            }\n\n            for ( unsigned int customersIterator = 0; customersIterator < customers.size(); customersIterator++ ) {\n                customer selectedTicketCustomer = customers[customersIterator];\n                if (selectedTicketCustomer.id != userIdForSelectedTicket) {\n                    continue;\n                }\n                cout << \"Ticket for \" << selectedTicketCustomer.name << \" at \" << selectedTicketTrip.startingTime << \" ending at \" << selectedTicketTrip.endingTime << \" bus no: \" << busIdForSelectedTicket << \" seat no: \" << seatIdForSelectedTicket << \" is canceled\";\n            }\n        }\n    }\n}\n\nvoid interface () {\n  system(\"cls\");\n  int selectedOperation;\n//  string currentDirectory = system(\"cd\");\n//  cout << currentDirectory + \"\\\\bmsData\";\n\tcout << \"select an operation\\n\"\n\t\t<<\"1) make new user\\n\"\n\t\t<<\"2) make new route\\n\"\n\t\t<<\"3) make new trip\\n\"\n\t\t<<\"4) make new bus\\n\"\n\t\t<<\"5) make new ticket\\n\"\n\t\t<<\"6) change Password\\n\"\n\t\t<<\"7) list current users\\n\"\n\t\t<<\"8) list current routes\\n\"\n\t\t<<\"9) list current trips\\n\"\n\t\t<<\"10) list current busses\\n\"\n\t\t<<\"11) get ticket info\\n\"\n\t\t<<\"12) cancel ticket\\n\"\n\t\t<<\"13) search customer\\n\";\n  cin >> selectedOperation;\n  switch ( selectedOperation ) {\n    case 1:\n\t\tmakeNewCustomer();\n\t\tbreak;\n    case 2:\n    \tmakeNewRoute();\n    \tbreak;\n    case 3:\n    \tmakeNewTrip();\n    \tbreak;\n    case 4:\n    \tmakeNewBus();\n    \tbreak;\n    case 5:\n    \tmakeNewTicket();\n    \tbreak;\n    case 6:\n    \tint id;\n    \tsystem(\"cls\");\n    \tcout << \"enter your id\\n\";\n    \tcin >> id;\n\t\tcustomers[id].changePassword();\n\t\tbreak;\n    case 7:\n    \tsystem(\"cls\");\n\t\tdisplayAllUsers();\n\t\tbreak;\n    case 8:\n    \tsystem(\"cls\");\n\t\tdisplayAllRoutes();\n\t\tbreak;\n    case 9:\n    \tsystem(\"cls\");\n\t\tdisplayAllTrips();\n\t\tbreak;\n    case 10:\n    \tsystem(\"cls\");\n\t\tdisplayAllBusses();\n\t\tbreak;\n    case 11:\n    \tsystem(\"cls\");\n    \tdisplayTicketInfo();\n\t\tbreak;\n    case 12:\n    \tsystem(\"cls\");\n\t\tcancelTicket();\n\t\tbreak;\n    case 13:\n    \tsystem(\"cls\");\n\t\tsearchCustomers();\n\t\tbreak;\n    default:\n\t\treturn;\n\t\tbreak;\n  }\n\n  interface ();\n}\n\nint main () {\n\tinterface ();\n\treturn 0;\n}","version":"4"},{"title":"workshop","author":"Owais","language":"Python","code":"class category:\n    def __init__(self, categoryName, stickers):\n        self.categoryName = categoryName\n        self.stickers = stickers\n\nclass sticker:\n    def __init__(self, name, price):\n        self.name = name\n        self.price = price\n        \n\nlistOfStickerCategories = []\nlistOfStickerCategories.append(\n    category('animals', \n             [\n                 sticker('monkey', 150),\n                 sticker('birds', 250),\n                 sticker('cats', 50)\n                 ]\n             ))\nlistOfStickerCategories.append(\n    category('anime',  \n             [\n                 sticker('AOT', 150),\n                 sticker('Demon Slayer', 250),\n                 sticker('Black Clover', 50)\n                 ]\n             ))\nlistOfStickerCategories.append(\n    category('cars',  \n             [sticker('Volvo', 150), \n              sticker('Suzuki', 250), \n              sticker('Nissan', 50), \n              sticker('Toyota', 50)\n              ]\n             ))\n\nfor category in listOfStickerCategories:\n    #print(category)\n    print(\"stickers in \" , category.categoryName , \" are: \")\n    for sticker in category.stickers:\n        print(sticker.name, end=\", \")\n    print(\"\\n\")","version":"0","id":1},{"id":2,"version":2,"title":"lab tasks","language":"CPP","author":"owais","code":"#include <iostream>\nusing namespace std;\nvoid main()\n{\n\tint num;\n\tcout << \"Enter the number\";\n\tcin >> num;\n\tint ans = ((num*2+6)/2)-num;\n\tcout << ans;\n}"},{"title":"lab tasks","author":"Owais","language":"CPP","code":"#include <iostream>\nusing namespace std;\nvoid main() {\n\tfloat sub1, sub2, sub3, sub4, sub5;\n\tfloat total = 0;\n\tcout << \"Enter the numbers\";\n\tcin >> sub1 >> sub2 >> sub3 >> sub4 >> sub5;\n\ttotal = sub1 + sub2 + sub3 + sub4 + sub5;\n\tfloat avg = total / 5.0;\n\tcout << \"\\n avg: \" << avg;\n}","version":"4","id":3},{"title":"lab tasks","author":"Owais","language":"CPP","code":"#include <iostream>\nusing namespace std;\n\nvoid main () {\n\tfloat a, b, c;\n\tcout << \"Enter three numbers\";\n\tcin >> a >> b >> c;\n\tfloat ans = (a*a + b*b + c*c) +2*(a*b + b*c + c*a);\n\tcout << ans;\n}","version":"7","id":4},{"title":"lab activities","author":"Owais","language":"CPP","code":"#include <iostream>\nusing namespace std;\n\nint main () {\n\tfloat radius, height;\n\tcout << \"Enter the radius and the height: \";\n\tcin >> radius >> height;\n\tcout << \"\\nVoulume: \" << (1.0/3.0)*3.141*radius*radius*height;\n\treturn 0;\n}","version":"1","id":6},{"title":"lab activities","author":"Owais","language":"CPP","code":"#include <iostream>\nusing namespace std;\n\nint main () {\n\tint num1, num2, num3, num4, num5;\n\tcout << \"Enter 5 numbers: \";\n\tcin >> num1 >> num2 >> num3 >> num4 >> num5;\n    float sum = num1 + num2 + num3 + num4 + num5;\n    float product = num1 * num2 * num3 * num4 * num5;\n\tcout << \"\\sum: \" << sum << endl\n\t<< \"average: \" << sum/5.0 << endl\n\t<< \"product: \" << product;\n\treturn 0;\n}","version":"3","id":7},{"title":"lab activities","author":"Owais","language":"CPP","code":"#include <iostream>\nusing namespace std;\n\nint main () {\n\tint num1, num2;\n\tcout << \"Enter 2 numbers: \";\n\tcin >> num1 >> num2;\n    float reminder = num1 % num2;\n    float qoutient = num1 / num2;\n    cout << \"\\nreminder: \" << reminder << endl\n\t<< \"qoutient: \" << qoutient << endl;\n\treturn 0;\n}","version":"5","id":8},{"title":"lab activities","author":"Owais","language":"CPP","code":"#include <iostream>\nusing namespace std;\n\nint main () {\n\tint num;\n\tcout << \"Enter a number: \";\n\tcin >> num;\n\tcout << ((num*2)+10)/2 - num;\n\treturn 0;\n}","version":"6","id":9},{"title":"lab activities","author":"Owais","language":"CPP","code":"#include <iostream>\nusing namespace std;\n\nint main () {\n\tfloat num1, num2, num3;\n\tcout << \"Enter 3 numbers: \";\n\tcin >> num1 >> num2 >> num3;\n    cout << \"\\nresult: \" << (num1*num1) + (num2*num2) + (num3*num3);\n\treturn 0;\n}","version":"8","id":10},{"title":"lab activities","author":"Owais","language":"CPP","code":"#include <iostream>\nusing namespace std;\n\nint main () {\n\tfloat a, b;\n\tcout << \"Enter 2 numbers: \";\n\tcin >> a >> b;\n    cout << \"\\nx= \" << a*a + 2*a*b + b*b;\n\treturn 0;\n}","version":"9","id":11},{"title":"lab activites","author":"Owais","language":"CPP","code":"#include <iostream>\nusing namespace std;\n\nint main () {\n\tfloat a;\n\tcout << \"Enter a non zero number: \";\n\tcin >> a;\n\tif ( a == 0 ) {\n\t    return 1;\n\t}\n\tdouble reciprocal = 1.0 / a;\n    cout << \"\\nreciprocal= \" << reciprocal;\n\treturn 0;\n}","version":"10","id":12},{"title":"lab activities","author":"Owais","language":"CPP","code":"#include <iostream>\nusing namespace std;\n\nint main () {\n\tint a, b;\n\tcout << \"Enter two single digit numbers: \";\n\tcin >> a >> b;\n\tfloat ans = ((a*2+5)*5)+b-4-21;\n    cout << \"\\nans= \" << ans;\n\treturn 0;\n}","version":"11","id":13},{"title":"lab activities","author":"Owais","language":"CPP","code":"#include <iostream>\nusing namespace std;\n\nint main () {\n\tchar a;\n\tcout << \"Enter a character: \";\n\tcin >> a;\n    cout << (char)((int)a - 32);\n\treturn 0;\n}","version":"12","id":14},{"title":"lab activities","author":"Owais","language":"CPP","code":"#include <iostream>\nusing namespace std;\n\nint main () {\n\tchar a;\n\tcout << \"Enter a character: \";\n\tcin >> a;\n    cout << (int)a;\n\treturn 0;\n}","version":"13","id":15},{"title":"lab activities","author":"Owais","language":"CPP","code":"#include <iostream>\nusing namespace std;\n\nint main () {\n\tchar a;\n\tcout << \"Enter a character from (0-9): \";\n\tcin >> a;\n\tcout << a - '0';\n    cout << (int)a-48;\n\treturn 0;\n}","version":"14","id":16},{"title":"lab activities","author":"Owais","language":"CPP","code":"#include <iostream>\nusing namespace std;\n\nint main () {\n\tint inches;\n\tcout << \"Enter the number of inches: \";\n\tcin >> inches;\n\tconst int feet = inches / 12;\n\tint remainingInches = inches%12;\n\tcout << \"\\t\\t\" << inches << \" inches = \" << feet << \" feet \" << remainingInches << \" inches\";\n\treturn 0;\n}","version":"15","id":17},{"title":"lab activities","author":"owais","language":"CPP","code":"#include <iostream>\nusing namespace std;\n\nint main () {\n\tint minutes;\n\tcout << \"Enter the minutes: \";\n\tcin >> minutes;\n\tconst int hour = minutes / 60;\n\tint remainingMinutes = minutes % 60;\n\tcout << \"\\t\\t\" << minutes << \" minutes = \" << hour << \" hour \" << remainingMinutes << \" minutes\";\n\treturn 0;\n}","version":"16","id":18},{"title":"lab","author":"Owais","language":"CPP","code":"#include <iostream>\nusing namespace std;\n\nint main() {\n\tint marks[5] = {};\n\tint total = 0;\n\tfor (int i = 0; i < sizeof(marks)/4; i++) {\n\t\tint markOfSubject;\n\t\tcout << \"Enter marks of subject \" << i+1 << \": \";\n\t\tcin >> markOfSubject;\n\t\ttotal += markOfSubject;\n\t\tsystem(\"cls\");\n\t}\n\tfloat avg = total / sizeof(marks)/4;\n\tcout << \"avg: \" << avg;\n\treturn 0;\n}","version":"4.1","id":19},{"id":20,"title":"PROJECT SEAA","language":"CPP","author":"Sareen","code":"#include<iostream>\n#include<conio.h>\n#include<stdlib.h>\n#include<windows.h>\n\nusing namespace std;\nint main()\n{\n\n\tint optionSelected;\n\tcout << \"1) Play Game\\n2) To Pay Credits\\n3) quit\" << endl;\n\tcin >> optionSelected;\n\tsystem(\"CLS\");\n\tswitch (optionSelected) {\n\tcase 1:\n\t{\n\t\tchar userAnswer;\n\t\tcout << \"You are in the jungle\" << endl;\n\n\t\tcout << \"THE GHOST WILL LET YOU GO IF YOU'LL ANSWER THESE QUESTIONS CORRECTLY OR YOU'LL DIE\" << endl;\n\t\tcout << \"\\n\\n\\n\\nPress any key to continue\" << endl;\n\t\t\n\t\t_getch(); // to wait for input \n\t\tsystem(\"CLS\");//to clear screen\n\t\t\n\t\t\n\t\tcout << \"When Pakistan came into being?\" << endl;\n\t\tcout << \"a)1947\\t\\tb)1987\\nc)1950\\t\\td)1949\" << endl;\n\t\tcin >> userAnswer;\n\t\tif (userAnswer == 'a') {\n\t\t\tcout << \"Answer is correct\" << endl;\n\t\t}\n\t\telse {\n\t\t\tcout << \"Wrong answer YOU DIEDDDDDDDDDD\" << endl;\n\t\t}\n\t\tbreak;\n\t}\n\t\t\n\tcase 2:\n\t\tcout << \"Sareen\" << endl;\n\t\tcout << \"Aliha\" << endl;\n\t\tcout << \"Eman\" << endl;\n\t\tcout << \"Afia\" << endl;\n\t\tbreak;\n\t}\n\treturn 0;\n}","version":"1"},{"title":"Project SEAA","author":"Sareen/Aliha","language":"CPP","code":"#include<iostream>\n#include<conio.h>\n#include<stdlib.h>\n#include<windows.h>\n\nusing namespace std;\nint main()\n{\n\n\tint optionSelected;\n\tcout << \"1) Play Game\\n2) To Pay Credits\\n3) quit\" << endl;\n\tcin >> optionSelected;\n\tsystem(\"CLS\");\n\tswitch (optionSelected) {\n\tcase 1:\n\t{\n\t\tchar userAnswer;\n\t\tcout << \"You are in the forest\" << endl;\n\t\tSleep(3000);\n\t\tcout << \"You get lost in the forest\" << endl;\n\t\tSleep(3000);\n\t\tcout<< \"You meet a ghost\" << endl;\n\t\tSleep(3000);\n\t\tcout << \"The Ghost gives you 10 tasks to complete\" << endl;\n\t\tSleep(3000);\n        cout << \"If you miss any two tasks you'll end up staying in the forest forever\" << endl;\n\t\tSleep(3000);\n\t\tcout << \"if you complete all these tasks you can leave the forest\" << endl;\n\t\tcout << \"\\n\\n\\n\\nPress any key to continue\" << endl;\n\n\t\t_getch(); // to wait for input \n\t\tsystem(\"CLS\");//to clear screen\n\n\n\t\tcout << \"When Pakistan came into being?\" << endl;\n\t\tcout << \"a)1947\\t\\tb)1987\\nc)1950\\t\\td)1949\" << endl;\n\t\tcin >> userAnswer;\n\t\tif (userAnswer == 'a') {\n\t\t\tcout << \"Answer is correct\" << endl;\n\t\t}\n\t\telse {\n\t\t\tcout << \"Wrong answer YOU DIEDDDDDDDDDD\" << endl;\n\t\t}\n\t\tbreak;\n\t}\n\n\tcase 2:\n\t\tcout << \"Sareen\" << endl;\n\t\tcout << \"Aliha\" << endl;\n\t\tcout << \"Eman\" << endl;\n\t\tcout << \"Afia\" << endl;\n\t\tbreak;\n\t}\n\treturn 0;\n}","version":"2","id":21},{"title":"SEAA","author":"AFIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA","language":"CPP","code":"#include <iostream>\n#include <conio.h>\n#include< stdlib.h >\nusing namespace std;\nvoid displayMenu() { //made a menu function here\n    cout << \"YOU ARE LOST IN THE JUNGLE AND A GHOST IS CHASING YOU.\\nhowever, you have the option to find your way out by playing a quiz game.\\nif you pass, YOU SUCCEED!\\nif you fail,YOU LOSE! and the ghost will capture you\\n\" << endl;\n    cout << \"Quiz Game Menu:\\n\" << endl;\n    cout << \"1--->\\t*play game\\n\" << endl;\n    cout << \"2--->\\t*instructions\\n\" << endl;\n    cout << \"3--->\\t*Credentials\\n\" << endl;\n    cout << \"4--->\\t*Exit\\n\" << endl;\n}\n\nint main() {\n    char count;\n\n    do {\n        displayMenu(); //using the menu function\n        count = _getch(); \n        system(\"CLS\");\n        switch (count) {\n        case '1':\n            cout << \"LET THE GAMES BEGIN!!!\" << endl;\n            // yahan game ka sara code ajaye ga\n            break;\n\n        case '2':\n            cout << \"Instructions:\" << endl;\n            cout <<\"you may answer 8 out of the 10 given questions correctly inorder to make it out of the jungle! Answer the questions from the provided options to the best of your ability!\" << endl;\n         \n            break;\n\n        case '3':\n            cout << \"Credentials:\" << endl;\n            cout << \"NAMES & ROLL NO.--->\\n1.Eman Rohail:23576\\n2.Afia Eman:232557\\n3.Sareen Abbassi:232533\\n4.Aliha:232574\\n\" << endl;\n            break;\n\n        case '4':\n            cout << \"Exiting the Quiz Game.\\nthanks for playing!\" << endl;\n            break;\n\n        default:\n            cout << \"Invalid choice. Please choose a valid option.\" << endl;\n        }\n        cout << \"Press any key to continue...\";\n        _getch(); \n        system(\"cls\");\n\n    } while (count != '4');\n\n    return 0;\n}","version":"2.1","id":22},{"title":"SEAA","author":"Sareen / Afia","language":"CPP","code":"#include<iostream>\n#include<conio.h>\n#include<windows.h>\n#include<string>\nusing namespace std;\n\nint lives = 2;\n\nbool askQuestion(string question, string options, char correctOption) {\n\tchar userAnswer;\n\tcout << question << endl;\n\tcout << options << endl;\n\n\tcin >> userAnswer;\n\n\tif (userAnswer == correctOption) {\n\t\tcout << \"Hurrrah!\";\n\t}\n\telse {\n\t\tlives--;\n\t\tcout << \"Wrong Answer\";\n\t}\n\n\tif (lives == 0) {\n\t\tsystem(\"CLS\"); // to clear screen\n\t\tcout << \"YOU HAVE DIEEDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\";\n\t\t_getch();\n\t\tsystem(\"CLS\"); // to clear screen\n\t\treturn true;\n\t}\n\n\tcout << \"\\n\\n\\n\\n\\nPress any key to continue...\";\n\t_getch();\n\tsystem(\"CLS\"); // to clear screen\n\treturn false;\n}\n\n\nint displayMenu() {\n\tint optionSelected;\n\tcout << \"Quiz Game Menu:\\n\" << endl;\n\tcout << \"1) Play Game\\n2) To Pay Credits\\n3) instructions\\n4) quit\" << endl;\n\tcin >> optionSelected;\n\treturn optionSelected;\n}\n\n\nint main() {\n\tint optionSelected;\n\tdo {\n\t\toptionSelected = displayMenu();\n\t\tsystem(\"CLS\"); // to clear screen\n\n\t\tswitch (optionSelected) {\n\t\tcase 1: {\n\n\t\t\tcout << \"You are in the forest\" << endl;\n\t\t\t_getch();\n\t\t\tcout << \"You get lost in the forest\" << endl;\n\t\t\t_getch();\n\t\t\tcout << \"You meet a ghost\" << endl;\n\t\t\t_getch();\n\t\t\tcout << \"The Ghost gives you 10 tasks to complete\" << endl;\n\t\t\t_getch();\n\t\t\tcout << \"If you miss any two tasks you'll end up staying in the forest forever\" << endl;\n\t\t\t_getch();\n\t\t\tcout << \"if you complete all these tasks you can leave the forest\" << endl;\n\t\t\tcout << \"\\n\\n\\n\\nPress any key to continue\" << endl;\n\t\t\t_getch();\n\t\t\tsystem(\"CLS\");\n\n\t\t\tif (askQuestion(\"When did Pakistan came into being?\", \"\\na)1947\\t\\tb)1987\\nc)1950\\t\\td)1949\", 'a')) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (askQuestion(\"What is the name of Afia's cat\", \"\\na)Aliha\\t\\tb)Rio\\nc)Bhatti\\td)Saleh\", 'b')) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase 2:\n\t\t\tcout << \"Credits\\n\\n\";\n\t\t\tcout << \"Sir Danish\" << endl;\n\t\t\tcout << \"Maam Asra\" << endl;\n\t\t\tcout << \"Wajdan (mentor)\" << endl << endl << endl;\n\t\t\tcout << \"NAMES & ROLL NO.\\n\\n\\n1.Eman Rohail:23576\\n2.Afia Eman:232557\\n3.Sareen Abbassi:232533\\n4.Aliha:232574\\n\" << endl;\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tcout << \"Instructions:\" << endl;\n\t\t\tcout << \"you may answer 8 out of the 10 given questions correctly inorder to make it out of the jungle! Answer the questions from the provided options to the best of your ability!\" << endl;\n\n\t\t\tbreak;\n\n\t\tcase 4:\n\t\t\tcout << \"Thanks for playing\";\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tcout << \"Invalid choice please choose a valid option\";\n\t\t}\n\t\tcout << \"\\n\\n\\n\\nPress any key to continue...\";\n\t\t_getch();\n\t\tsystem(\"CLS\");\n\n\t} while (optionSelected != 4);\n\n\treturn 0;\n}","version":"3","id":23}]